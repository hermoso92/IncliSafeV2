@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthService
@using Microsoft.AspNetCore.Components.Web

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" 
            OnClick="@((e) => DrawerToggle())" />
        
        <MudText Typo="Typo.h5" Class="ml-3">IncliSafe</MudText>
        <MudSpacer />
        
        @if (_currentUser != null)
        {
            <MudMenu Icon="@Icons.Material.Filled.Notifications" Color="Color.Inherit" Dense="true">
                @foreach (var notification in _notifications)
                {
                    <MudMenuItem>@notification.Message</MudMenuItem>
                }
            </MudMenu>
            
            <MudMenu AnchorOrigin="Origin.BottomRight">
                <ActivatorContent>
                    <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Primary">
                        @_currentUser.Nombre
                    </MudChip>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem OnClick="@(() => NavigateToProfile())">Perfil</MudMenuItem>
                    <MudMenuItem OnClick="@(() => ToggleTheme())">
                        @(_isDarkMode ? "Modo Claro" : "Modo Oscuro")
                    </MudMenuItem>
                    <MudDivider />
                    <MudMenuItem OnClick="@(() => Logout())">Cerrar Sesión</MudMenuItem>
                </ChildContent>
            </MudMenu>
        }
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-4 pt-4">
            <Microsoft.AspNetCore.Components.Web.ErrorBoundary>
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <MudAlert Severity="Severity.Error" Variant="Variant.Filled">
                        Ha ocurrido un error. Por favor, inténtelo de nuevo.
                    </MudAlert>
                </ErrorContent>
            </Microsoft.AspNetCore.Components.Web.ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode;
    private Usuario _currentUser;
    private List<Notification> _notifications = new();

    protected override async Task OnInitializedAsync()
    {
        _currentUser = await AuthService.GetCurrentUser();
        await LoadNotifications();
        _isDarkMode = await LoadThemePreference();
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task LoadNotifications()
    {
        // Cargar notificaciones del usuario
    }

    private async Task NavigateToProfile()
    {
        NavigationManager.NavigateTo("/profile");
    }

    private async Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        await SaveThemePreference(_isDarkMode);
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/login");
    }
}
