@page "/analysis/history"
@using IncliSafe.Shared.Models.Analysis
@using IncliSafe.Shared.Models.Core
@using IncliSafe.Client.Services.Interfaces
@inject IDobackService DobackService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h4" Class="mb-4">Historial de Análisis</MudText>

        @if (_loading)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        }
        else if (_analysisHistory == null || !_analysisHistory.Any())
        {
            <MudAlert Severity="Severity.Info">No hay análisis registrados.</MudAlert>
        }
        else
        {
            <MudTable Items="@_analysisHistory" Dense="true" Hover="true" Breakpoint="Breakpoint.Sm">
                <HeaderContent>
                    <MudTh>Fecha</MudTh>
                    <MudTh>Tipo</MudTh>
                    <MudTh>Nombre</MudTh>
                    <MudTh>Estado</MudTh>
                    <MudTh>Acciones</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Fecha">@context.CreatedAt.ToLocalTime().ToString("g")</MudTd>
                    <MudTd DataLabel="Tipo">@context.AnalysisType</MudTd>
                    <MudTd DataLabel="Nombre">@context.Name</MudTd>
                    <MudTd DataLabel="Estado">
                        <MudChip Color="@GetStatusColor(context.Status)" Size="Size.Small">
                            @context.Status
                        </MudChip>
                    </MudTd>
                    <MudTd>
                        <MudIconButton Icon="@Icons.Material.Filled.Visibility" 
                                     OnClick="@(() => ViewAnalysisDetails(context))"
                                     Size="Size.Small"
                                     Title="Ver detalles" />
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        }
    </MudPaper>
</MudContainer>

@code {
    private bool _loading = true;
    private List<AnalysisResult>? _analysisHistory;

    protected override async Task OnInitializedAsync()
    {
        await LoadAnalysisHistory();
    }

    private async Task LoadAnalysisHistory()
    {
        try
        {
            _loading = true;
            _analysisHistory = (await DobackService.GetAnalysisHistoryAsync(1)).ToList(); // TODO: Obtener el ID del vehículo seleccionado
        }
        catch (Exception ex)
        {
            // TODO: Manejar el error
            Console.Error.WriteLine($"Error al cargar el historial de análisis: {ex.Message}");
        }
        finally
        {
            _loading = false;
        }
    }

    private Color GetStatusColor(AnalysisStatus status) => status switch
    {
        AnalysisStatus.Completed => Color.Success,
        AnalysisStatus.InProgress => Color.Info,
        AnalysisStatus.Failed => Color.Error,
        _ => Color.Default
    };

    private void ViewAnalysisDetails(AnalysisResult analysis)
    {
        // TODO: Implementar la navegación a los detalles del análisis
    }
} 