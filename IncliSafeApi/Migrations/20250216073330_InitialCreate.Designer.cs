// <auto-generated />
using System;
using IncliSafeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IncliSafeApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250216073330_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.AnalysisResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnalysisTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DobackAnalysisId")
                        .HasColumnType("int");

                    b.Property<decimal>("EfficiencyScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MaintenanceScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SafetyScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("StabilityScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DobackAnalysisId")
                        .IsUnique();

                    b.ToTable("AnalysisResults", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.Anomaly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CycleId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("Resolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Severity")
                        .HasColumnType("float");

                    b.Property<double>("Threshold")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrendAnalysisId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CycleId");

                    b.HasIndex("TrendAnalysisId");

                    b.ToTable("Anomalies", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.Cycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageSpeed")
                        .HasColumnType("float");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaxSpeed")
                        .HasColumnType("float");

                    b.Property<decimal>("SafetyScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("StabilityIndex")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cycles", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.DobackAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Confidence")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StabilityIndex")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DobackAnalyses", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.DobackData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AccMagnitude")
                        .HasColumnType("float");

                    b.Property<double>("AccelerometerX")
                        .HasColumnType("float");

                    b.Property<double>("AccelerometerY")
                        .HasColumnType("float");

                    b.Property<double>("AccelerometerZ")
                        .HasColumnType("float");

                    b.Property<int>("CycleId")
                        .HasColumnType("int");

                    b.Property<int?>("DobackAnalysisId")
                        .HasColumnType("int");

                    b.Property<int>("ErrorsCAN")
                        .HasColumnType("int");

                    b.Property<double>("Humidity")
                        .HasColumnType("float");

                    b.Property<decimal>("MaintenanceScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double>("MicrosCleanCAN")
                        .HasColumnType("float");

                    b.Property<double>("MicrosSD")
                        .HasColumnType("float");

                    b.Property<double>("Pitch")
                        .HasColumnType("float");

                    b.Property<bool>("RequiresAttention")
                        .HasColumnType("bit");

                    b.Property<double>("Roll")
                        .HasColumnType("float");

                    b.Property<decimal>("SafetyScore")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("SensorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<decimal>("StabilityIndex")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double>("Steer")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<double>("TimeAntWifi")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("USCycle1")
                        .HasColumnType("float");

                    b.Property<double>("USCycle2")
                        .HasColumnType("float");

                    b.Property<double>("USCycle3")
                        .HasColumnType("float");

                    b.Property<double>("USCycle4")
                        .HasColumnType("float");

                    b.Property<double>("USCycle5")
                        .HasColumnType("float");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<double>("Yaw")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CycleId");

                    b.HasIndex("DobackAnalysisId");

                    b.ToTable("DobackData", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.Prediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Confidence")
                        .HasColumnType("float");

                    b.Property<int?>("DobackAnalysisId")
                        .HasColumnType("int");

                    b.Property<double>("RiskScore")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrendAnalysisId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DobackAnalysisId");

                    b.HasIndex("TrendAnalysisId");

                    b.ToTable("Prediction");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.TrendAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Confidence")
                        .HasColumnType("float");

                    b.Property<double>("LongTermTrend")
                        .HasColumnType("float");

                    b.Property<double>("MediumTermTrend")
                        .HasColumnType("float");

                    b.Property<double>("SeasonalityScore")
                        .HasColumnType("float");

                    b.Property<double>("ShortTermTrend")
                        .HasColumnType("float");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<double>("Volatility")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TrendAnalysis", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Auth.BlacklistedToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RevokedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlacklistedTokens", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Inspeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectorId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Inspecciones", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("UsuariosHistory");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaInspeccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vehiculos", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Knowledge.KnowledgePattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Confidence")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedActions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KnowledgePatterns", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Notifications.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alerts", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Notifications.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Notifications.NotificationSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EnableNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("MinimumSeverity")
                        .HasColumnType("int");

                    b.Property<decimal>("SafetyThreshold")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("StabilityThreshold")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehiculoId")
                        .IsUnique();

                    b.ToTable("NotificationSettings", (string)null);
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Patterns.DetectedPattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ConfidenceScore")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetectedValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DetectionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DobackAnalysisId")
                        .HasColumnType("int");

                    b.Property<string>("PatternName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedActions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DobackAnalysisId");

                    b.ToTable("DetectedPattern");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Patterns.PatternDetection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConfidenceScore")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetectedValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DetectionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KnowledgePatternId")
                        .HasColumnType("int");

                    b.Property<string>("PatternName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresAction")
                        .HasColumnType("bit");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgePatternId");

                    b.ToTable("PatternDetections");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.AnalysisResult", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Analysis.DobackAnalysis", "DobackAnalysis")
                        .WithOne("Result")
                        .HasForeignKey("IncliSafe.Shared.Models.Analysis.AnalysisResult", "DobackAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DobackAnalysis");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.Anomaly", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Analysis.Cycle", "Cycle")
                        .WithMany("Anomalies")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IncliSafe.Shared.Models.Analysis.TrendAnalysis", "TrendAnalysis")
                        .WithMany("Anomalies")
                        .HasForeignKey("TrendAnalysisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cycle");

                    b.Navigation("TrendAnalysis");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.DobackData", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Analysis.Cycle", "Cycle")
                        .WithMany("DobackData")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IncliSafe.Shared.Models.Analysis.DobackAnalysis", "Analysis")
                        .WithMany("Data")
                        .HasForeignKey("DobackAnalysisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Analysis");

                    b.Navigation("Cycle");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.Prediction", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Analysis.DobackAnalysis", "DobackAnalysis")
                        .WithMany("Predictions")
                        .HasForeignKey("DobackAnalysisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IncliSafe.Shared.Models.Analysis.TrendAnalysis", "TrendAnalysis")
                        .WithMany("Predictions")
                        .HasForeignKey("TrendAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DobackAnalysis");

                    b.Navigation("TrendAnalysis");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Inspeccion", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Entities.Usuario", "Inspector")
                        .WithMany()
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IncliSafe.Shared.Models.Entities.Vehiculo", "Vehiculo")
                        .WithMany("Inspecciones")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspector");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.License", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Entities.Vehiculo", "Vehiculo")
                        .WithMany("Licenses")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Vehiculo", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Entities.Usuario", "Usuario")
                        .WithMany("Vehiculos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Notifications.NotificationSettings", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Entities.Vehiculo", "Vehiculo")
                        .WithOne("NotificationSettings")
                        .HasForeignKey("IncliSafe.Shared.Models.Notifications.NotificationSettings", "VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Patterns.DetectedPattern", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Analysis.DobackAnalysis", "DobackAnalysis")
                        .WithMany("DetectedPatterns")
                        .HasForeignKey("DobackAnalysisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DobackAnalysis");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Patterns.PatternDetection", b =>
                {
                    b.HasOne("IncliSafe.Shared.Models.Knowledge.KnowledgePattern", "KnowledgePattern")
                        .WithMany("Detections")
                        .HasForeignKey("KnowledgePatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KnowledgePattern");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.Cycle", b =>
                {
                    b.Navigation("Anomalies");

                    b.Navigation("DobackData");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.DobackAnalysis", b =>
                {
                    b.Navigation("Data");

                    b.Navigation("DetectedPatterns");

                    b.Navigation("Predictions");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Analysis.TrendAnalysis", b =>
                {
                    b.Navigation("Anomalies");

                    b.Navigation("Predictions");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Usuario", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Entities.Vehiculo", b =>
                {
                    b.Navigation("Inspecciones");

                    b.Navigation("Licenses");

                    b.Navigation("NotificationSettings")
                        .IsRequired();
                });

            modelBuilder.Entity("IncliSafe.Shared.Models.Knowledge.KnowledgePattern", b =>
                {
                    b.Navigation("Detections");
                });
#pragma warning restore 612, 618
        }
    }
}
